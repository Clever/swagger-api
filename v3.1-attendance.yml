basePath: /v3.1
definitions:
  Attendance:
    properties:
      attendance_date:
        format: date
        type: string
      attendance_status:
        $ref: '#/definitions/AttendanceStatus'
      attendance_type:
        $ref: '#/definitions/AttendanceType'
      created:
        format: datetime
        type: string
      district_id:
        format: mongo-id
        type: string
      excuse_code:
        type: string
      last_modified:
        format: datetime
        type: string
      school_id:
        format: mongo-id
        type: string
      section_id:
        format: mongo-id
        type: string
      sis_id:
        type: string
      student_id:
        format: mongo-id
        type: string
    type: object
  AttendanceResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/Attendance'
        type: array
      links:
        items:
          $ref: '#/definitions/Link'
        type: array
        x-omitempty: true
    type: object
  AttendanceStatus:
    enum:
    - present
    - absent
    - tardy
    type: string
  AttendanceType:
    enum:
    - daily
    - section
    type: string
  BadRequest:
    properties:
      message:
        type: string
    type: object
  InternalError:
    properties:
      message:
        type: string
    type: object
  NotFound:
    properties:
      message:
        type: string
    type: object
host: api.clever.com
info:
  description: The Clever Attendance API
  title: Attendance API
  version: 3.1.0
paths:
  /attendance/schools/{school_id}:
    get:
      operationId: listAttendanceForSchool
      parameters:
      - in: path
        name: school_id
        required: true
        type: string
      - format: date
        in: query
        name: date_range_start
        type: string
      - format: date
        in: query
        name: date_range_end
        type: string
      - enum:
        - present
        - absent
        - tardy
        in: query
        name: attendance_status
        type: string
      - in: query
        maximum: 1000
        minimum: 1
        name: limit
        type: integer
      - in: query
        name: starting_after
        type: string
      - in: query
        name: ending_before
        type: string
      responses:
        "200":
          description: OK Response
          schema:
            $ref: '#/definitions/AttendanceResponse'
        "400":
          $ref: '#/responses/BadRequest'
        "401":
          $ref: '#/responses/Unauthorized'
        "404":
          $ref: '#/responses/NotFound'
        "500":
          $ref: '#/responses/InternalError'
      summary: Returns a list of attendance records for a school
  /attendance/sections/{section_id}:
    get:
      operationId: listAttendanceForSection
      parameters:
      - in: path
        name: section_id
        required: true
        type: string
      - format: date
        in: query
        name: date_range_start
        type: string
      - format: date
        in: query
        name: date_range_end
        type: string
      - enum:
        - present
        - absent
        - tardy
        in: query
        name: attendance_status
        type: string
      - in: query
        maximum: 1000
        minimum: 1
        name: limit
        type: integer
      - in: query
        name: starting_after
        type: string
      - in: query
        name: ending_before
        type: string
      responses:
        "200":
          description: OK Response
          schema:
            $ref: '#/definitions/AttendanceResponse'
        "400":
          $ref: '#/responses/BadRequest'
        "401":
          $ref: '#/responses/Unauthorized'
        "404":
          $ref: '#/responses/NotFound'
        "500":
          $ref: '#/responses/InternalError'
      summary: Returns a list of attendance records for a section
produces:
- application/json
responses:
  BadRequest:
    description: Bad Request
    schema:
      $ref: '#/definitions/BadRequest'
  InternalError:
    description: Internal Error
    schema:
      $ref: '#/definitions/InternalError'
  NotFound:
    description: Entity Not Found
    schema:
      $ref: '#/definitions/NotFound'
  Unauthorized:
    description: Not authorized
    schema:
      $ref: '#/definitions/Unauthorized'
schemes:
- https
security:
- oauth: []
securityDefinitions:
  oauth:
    authorizationUrl: https://clever.com/oauth/authorize
    flow: accessCode
    tokenUrl: https://clever.com/oauth/tokens
    type: oauth2
swagger: "2.0"
x-samples-languages:
- curl
- node
- ruby
- python
- php
- java
- go
